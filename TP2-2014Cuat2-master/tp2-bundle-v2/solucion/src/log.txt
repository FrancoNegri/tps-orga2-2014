
cropflip_c.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <cropflip_c>:
   0:	41 57                	push   r15
   2:	41 56                	push   r14
   4:	41 55                	push   r13
   6:	41 54                	push   r12
   8:	55                   	push   rbp
   9:	53                   	push   rbx
   a:	8b 5c 24 40          	mov    ebx,DWORD PTR [rsp+0x40]
   e:	85 db                	test   ebx,ebx
  10:	0f 8e d7 00 00 00    	jle    ed <cropflip_c+0xed>
  16:	8b 44 24 50          	mov    eax,DWORD PTR [rsp+0x50]
  1a:	8b 4c 24 38          	mov    ecx,DWORD PTR [rsp+0x38]
  1e:	4d 63 e0             	movsxd r12,r8d
  21:	44 8b 5c 24 48       	mov    r11d,DWORD PTR [rsp+0x48]
  26:	49 63 e9             	movsxd rbp,r9d
  29:	45 31 c0             	xor    r8d,r8d
  2c:	01 d8                	add    eax,ebx
  2e:	c1 e1 02             	shl    ecx,0x2
  31:	48 98                	cdqe   
  33:	41 c1 e3 02          	shl    r11d,0x2
  37:	41 89 ca             	mov    r10d,ecx
  3a:	48 83 e8 01          	sub    rax,0x1
  3e:	4d 63 eb             	movsxd r13,r11d
  41:	41 c1 ea 04          	shr    r10d,0x4
  45:	49 0f af c4          	imul   rax,r12
  49:	45 89 d6             	mov    r14d,r10d
  4c:	41 c1 e6 04          	shl    r14d,0x4
  50:	4c 01 e8             	add    rax,r13
  53:	48 01 c7             	add    rdi,rax
  56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  5d:	00 00 00 
  60:	85 c9                	test   ecx,ecx
  62:	7e 76                	jle    da <cropflip_c+0xda>
  64:	49 89 f9             	mov    r9,rdi
  67:	4d 29 e9             	sub    r9,r13
  6a:	45 85 f6             	test   r14d,r14d
  6d:	0f 84 85 00 00 00    	je     f8 <cropflip_c+0xf8>
  73:	48 8d 47 10          	lea    rax,[rdi+0x10]
  77:	83 f9 0f             	cmp    ecx,0xf
  7a:	4c 8d 7e 10          	lea    r15,[rsi+0x10]
  7e:	0f 97 c2             	seta   dl
  81:	48 39 c6             	cmp    rsi,rax
  84:	0f 97 c0             	seta   al
  87:	4c 39 ff             	cmp    rdi,r15
  8a:	41 0f 97 c7          	seta   r15b
  8e:	44 09 f8             	or     eax,r15d
  91:	84 c2                	test   dl,al
  93:	74 63                	je     f8 <cropflip_c+0xf8>
  95:	31 c0                	xor    eax,eax
  97:	31 d2                	xor    edx,edx
  99:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
  a0:	f3 0f 6f 04 07       	movdqu xmm0,XMMWORD PTR [rdi+rax*1]
  a5:	83 c2 01             	add    edx,0x1
  a8:	f3 0f 7f 04 06       	movdqu XMMWORD PTR [rsi+rax*1],xmm0
  ad:	48 83 c0 10          	add    rax,0x10
  b1:	44 39 d2             	cmp    edx,r10d
  b4:	72 ea                	jb     a0 <cropflip_c+0xa0>
  b6:	44 39 f1             	cmp    ecx,r14d
  b9:	44 89 f0             	mov    eax,r14d
  bc:	74 1c                	je     da <cropflip_c+0xda>
  be:	66 90                	xchg   ax,ax
  c0:	42 8d 14 18          	lea    edx,[rax+r11*1]
  c4:	48 63 d2             	movsxd rdx,edx
  c7:	45 0f b6 3c 11       	movzx  r15d,BYTE PTR [r9+rdx*1]
  cc:	48 63 d0             	movsxd rdx,eax
  cf:	83 c0 01             	add    eax,0x1
  d2:	39 c1                	cmp    ecx,eax
  d4:	44 88 3c 16          	mov    BYTE PTR [rsi+rdx*1],r15b
  d8:	7f e6                	jg     c0 <cropflip_c+0xc0>
  da:	41 83 c0 01          	add    r8d,0x1
  de:	48 01 ee             	add    rsi,rbp
  e1:	4c 29 e7             	sub    rdi,r12
  e4:	41 39 d8             	cmp    r8d,ebx
  e7:	0f 85 73 ff ff ff    	jne    60 <cropflip_c+0x60>
  ed:	5b                   	pop    rbx
  ee:	5d                   	pop    rbp
  ef:	41 5c                	pop    r12
  f1:	41 5d                	pop    r13
  f3:	41 5e                	pop    r14
  f5:	41 5f                	pop    r15
  f7:	c3                   	ret    
  f8:	31 c0                	xor    eax,eax
  fa:	eb c4                	jmp    c0 <cropflip_c+0xc0>

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	a9 01 00 00 02       	test   eax,0x2000001
   5:	00 00                	add    BYTE PTR [rax],al
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 08                	add    BYTE PTR [rax],cl
   b:	01 00                	add    DWORD PTR [rax],eax
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 01                	add    BYTE PTR [rcx],al
	...
  2d:	02 01                	add    al,BYTE PTR [rcx]
  2f:	08 00                	or     BYTE PTR [rax],al
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 02                	add    BYTE PTR [rdx],al
  35:	02 07                	add    al,BYTE PTR [rdi]
  37:	00 00                	add    BYTE PTR [rax],al
  39:	00 00                	add    BYTE PTR [rax],al
  3b:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 00                	add    BYTE PTR [rax],al
  42:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
  49:	04 08                	add    al,0x8
  4b:	2d 00 00 00 02       	sub    eax,0x2000000
  50:	01 06                	add    DWORD PTR [rsi],eax
  52:	00 00                	add    BYTE PTR [rax],al
  54:	00 00                	add    BYTE PTR [rax],al
  56:	02 08                	add    cl,BYTE PTR [rax]
  58:	07                   	(bad)  
  59:	00 00                	add    BYTE PTR [rax],al
  5b:	00 00                	add    BYTE PTR [rax],al
  5d:	02 01                	add    al,BYTE PTR [rcx]
  5f:	02 00                	add    al,BYTE PTR [rax]
  61:	00 00                	add    BYTE PTR [rax],al
  63:	00 05 01 00 00 00    	add    BYTE PTR [rip+0x1],al        # 6a <.debug_info+0x6a>
  69:	00 01                	add    BYTE PTR [rcx],al
  6b:	05 01 00 00 00       	add    eax,0x1
	...
  80:	00 70 01             	add    BYTE PTR [rax+0x1],dh
  83:	00 00                	add    BYTE PTR [rax],al
  85:	06                   	(bad)  
  86:	73 72                	jae    fa <.debug_info+0xfa>
  88:	63 00                	movsxd eax,DWORD PTR [rax]
  8a:	01 06                	add    DWORD PTR [rsi],eax
  8c:	49 00 00             	rex.WB add BYTE PTR [r8],al
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	00 00                	add    BYTE PTR [rax],al
  93:	00 06                	add    BYTE PTR [rsi],al
  95:	64                   	fs
  96:	73 74                	jae    10c <.debug_info+0x10c>
  98:	00 01                	add    BYTE PTR [rcx],al
  9a:	07                   	(bad)  
  9b:	49 00 00             	rex.WB add BYTE PTR [r8],al
  9e:	00 00                	add    BYTE PTR [rax],al
  a0:	00 00                	add    BYTE PTR [rax],al
  a2:	00 07                	add    BYTE PTR [rdi],al
  a4:	00 00                	add    BYTE PTR [rax],al
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	01 08                	add    DWORD PTR [rax],ecx
  aa:	42 00 00             	rex.X add BYTE PTR [rax],al
  ad:	00 00                	add    BYTE PTR [rax],al
  af:	00 00                	add    BYTE PTR [rax],al
  b1:	00 07                	add    BYTE PTR [rdi],al
  b3:	00 00                	add    BYTE PTR [rax],al
  b5:	00 00                	add    BYTE PTR [rax],al
  b7:	01 09                	add    DWORD PTR [rcx],ecx
  b9:	42 00 00             	rex.X add BYTE PTR [rax],al
  bc:	00 00                	add    BYTE PTR [rax],al
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	00 07                	add    BYTE PTR [rdi],al
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	00 00                	add    BYTE PTR [rax],al
  c6:	01 0a                	add    DWORD PTR [rdx],ecx
  c8:	42 00 00             	rex.X add BYTE PTR [rax],al
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 07                	add    BYTE PTR [rdi],al
  d1:	00 00                	add    BYTE PTR [rax],al
  d3:	00 00                	add    BYTE PTR [rax],al
  d5:	01 0b                	add    DWORD PTR [rbx],ecx
  d7:	42 00 00             	rex.X add BYTE PTR [rax],al
  da:	00 00                	add    BYTE PTR [rax],al
  dc:	00 00                	add    BYTE PTR [rax],al
  de:	00 08                	add    BYTE PTR [rax],cl
  e0:	00 00                	add    BYTE PTR [rax],al
  e2:	00 00                	add    BYTE PTR [rax],al
  e4:	01 0c 42             	add    DWORD PTR [rdx+rax*2],ecx
  e7:	00 00                	add    BYTE PTR [rax],al
  e9:	00 02                	add    BYTE PTR [rdx],al
  eb:	91                   	xchg   ecx,eax
  ec:	00 08                	add    BYTE PTR [rax],cl
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	00 00                	add    BYTE PTR [rax],al
  f2:	01 0d 42 00 00 00    	add    DWORD PTR [rip+0x42],ecx        # 13a <.debug_info+0x13a>
  f8:	02 91 08 08 00 00    	add    dl,BYTE PTR [rcx+0x808]
  fe:	00 00                	add    BYTE PTR [rax],al
 100:	01 0e                	add    DWORD PTR [rsi],ecx
 102:	42 00 00             	rex.X add BYTE PTR [rax],al
 105:	00 02                	add    BYTE PTR [rdx],al
 107:	91                   	xchg   ecx,eax
 108:	10 08                	adc    BYTE PTR [rax],cl
 10a:	00 00                	add    BYTE PTR [rax],al
 10c:	00 00                	add    BYTE PTR [rax],al
 10e:	01 0f                	add    DWORD PTR [rdi],ecx
 110:	42 00 00             	rex.X add BYTE PTR [rax],al
 113:	00 02                	add    BYTE PTR [rdx],al
 115:	91                   	xchg   ecx,eax
 116:	18 09                	sbb    BYTE PTR [rcx],cl
 118:	01 83 01 00 00 00    	add    DWORD PTR [rbx+0x1],eax
 11e:	00 00                	add    BYTE PTR [rax],al
 120:	00 0a                	add    BYTE PTR [rdx],cl
 122:	00 00                	add    BYTE PTR [rax],al
 124:	00 00                	add    BYTE PTR [rax],al
 126:	01 11                	add    DWORD PTR [rcx],edx
 128:	88 01                	mov    BYTE PTR [rcx],al
 12a:	00 00                	add    BYTE PTR [rax],al
 12c:	00 00                	add    BYTE PTR [rax],al
 12e:	00 00                	add    BYTE PTR [rax],al
 130:	09 01                	or     DWORD PTR [rcx],eax
 132:	a1 01 00 00 00 00 00 	movabs eax,ds:0xa00000000000001
 139:	00 0a 
 13b:	00 00                	add    BYTE PTR [rax],al
 13d:	00 00                	add    BYTE PTR [rax],al
 13f:	01 12                	add    DWORD PTR [rdx],edx
 141:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 142:	01 00                	add    DWORD PTR [rax],eax
 144:	00 00                	add    BYTE PTR [rax],al
 146:	00 00                	add    BYTE PTR [rax],al
 148:	00 0b                	add    BYTE PTR [rbx],cl
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	00 00                	add    BYTE PTR [rax],al
 14e:	0c 69                	or     al,0x69
 150:	00 01                	add    BYTE PTR [rcx],al
 152:	16                   	(bad)  
 153:	42 00 00             	rex.X add BYTE PTR [rax],al
 156:	00 00                	add    BYTE PTR [rax],al
 158:	00 00                	add    BYTE PTR [rax],al
 15a:	00 0b                	add    BYTE PTR [rbx],cl
 15c:	00 00                	add    BYTE PTR [rax],al
 15e:	00 00                	add    BYTE PTR [rax],al
 160:	0c 6a                	or     al,0x6a
 162:	00 01                	add    BYTE PTR [rcx],al
 164:	18 42 00             	sbb    BYTE PTR [rdx+0x0],al
	...
 16f:	00 0d 2d 00 00 00    	add    BYTE PTR [rip+0x2d],cl        # 1a2 <.debug_info+0x1a2>
 175:	83 01 00             	add    DWORD PTR [rcx],0x0
 178:	00 0e                	add    BYTE PTR [rsi],cl
 17a:	56                   	push   rsi
 17b:	00 00                	add    BYTE PTR [rax],al
 17d:	00 17                	add    BYTE PTR [rdi],dl
 17f:	01 00                	add    DWORD PTR [rax],eax
 181:	00 00                	add    BYTE PTR [rax],al
 183:	0f 56 00             	orps   xmm0,XMMWORD PTR [rax]
 186:	00 00                	add    BYTE PTR [rax],al
 188:	04 08                	add    al,0x8
 18a:	70 01                	jo     18d <.debug_info+0x18d>
 18c:	00 00                	add    BYTE PTR [rax],al
 18e:	0d 2d 00 00 00       	or     eax,0x2d
 193:	a1 01 00 00 0e 56 00 	movabs eax,ds:0x560e000001
 19a:	00 00 
 19c:	30 01                	xor    BYTE PTR [rcx],al
 19e:	00 00                	add    BYTE PTR [rax],al
 1a0:	00 0f                	add    BYTE PTR [rdi],cl
 1a2:	56                   	push   rsi
 1a3:	00 00                	add    BYTE PTR [rax],al
 1a5:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
 1a8:	8e 01                	mov    es,WORD PTR [rcx]
 1aa:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <cropflip_c+0x30b1316>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 01                	adc    al,BYTE PTR [rcx]
   f:	10 06                	adc    BYTE PTR [rsi],al
  11:	00 00                	add    BYTE PTR [rax],al
  13:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
  16:	0b 0b                	or     ecx,DWORD PTR [rbx]
  18:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  1b:	0e                   	(bad)  
  1c:	00 00                	add    BYTE PTR [rax],al
  1e:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
  21:	0b 0b                	or     ecx,DWORD PTR [rbx]
  23:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  26:	08 00                	or     BYTE PTR [rax],al
  28:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
  2b:	00 0b                	add    BYTE PTR [rbx],cl
  2d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  30:	00 00                	add    BYTE PTR [rax],al
  32:	05 2e 01 3f 0c       	add    eax,0xc3f012e
  37:	03 0e                	add    ecx,DWORD PTR [rsi]
  39:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  3b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  3d:	27                   	(bad)  
  3e:	0c 11                	or     al,0x11
  40:	01 12                	add    DWORD PTR [rdx],edx
  42:	01 40 06             	add    DWORD PTR [rax+0x6],eax
  45:	01 13                	add    DWORD PTR [rbx],edx
  47:	00 00                	add    BYTE PTR [rax],al
  49:	06                   	(bad)  
  4a:	05 00 03 08 3a       	add    eax,0x3a080300
  4f:	0b 3b                	or     edi,DWORD PTR [rbx]
  51:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  54:	02 06                	add    al,BYTE PTR [rsi]
  56:	00 00                	add    BYTE PTR [rax],al
  58:	07                   	(bad)  
  59:	05 00 03 0e 3a       	add    eax,0x3a0e0300
  5e:	0b 3b                	or     edi,DWORD PTR [rbx]
  60:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  63:	02 06                	add    al,BYTE PTR [rsi]
  65:	00 00                	add    BYTE PTR [rax],al
  67:	08 05 00 03 0e 3a    	or     BYTE PTR [rip+0x3a0e0300],al        # 3a0e036d <cropflip_c+0x3a0e036d>
  6d:	0b 3b                	or     edi,DWORD PTR [rbx]
  6f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  72:	02 0a                	add    cl,BYTE PTR [rdx]
  74:	00 00                	add    BYTE PTR [rax],al
  76:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
  79:	34 0c                	xor    al,0xc
  7b:	49 13 02             	adc    rax,QWORD PTR [r10]
  7e:	06                   	(bad)  
  7f:	00 00                	add    BYTE PTR [rax],al
  81:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
  84:	03 0e                	add    ecx,DWORD PTR [rsi]
  86:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  88:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  8a:	49 13 02             	adc    rax,QWORD PTR [r10]
  8d:	06                   	(bad)  
  8e:	00 00                	add    BYTE PTR [rax],al
  90:	0b 0b                	or     ecx,DWORD PTR [rbx]
  92:	01 55 06             	add    DWORD PTR [rbp+0x6],edx
  95:	00 00                	add    BYTE PTR [rax],al
  97:	0c 34                	or     al,0x34
  99:	00 03                	add    BYTE PTR [rbx],al
  9b:	08 3a                	or     BYTE PTR [rdx],bh
  9d:	0b 3b                	or     edi,DWORD PTR [rbx]
  9f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  a2:	02 06                	add    al,BYTE PTR [rsi]
  a4:	00 00                	add    BYTE PTR [rax],al
  a6:	0d 01 01 49 13       	or     eax,0x13490101
  ab:	01 13                	add    DWORD PTR [rbx],edx
  ad:	00 00                	add    BYTE PTR [rax],al
  af:	0e                   	(bad)  
  b0:	21 00                	and    DWORD PTR [rax],eax
  b2:	49 13 2f             	adc    rbp,QWORD PTR [r15]
  b5:	13 00                	adc    eax,DWORD PTR [rax]
  b7:	00 0f                	add    BYTE PTR [rdi],cl
  b9:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
  bd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_loc:

0000000000000000 <.debug_loc>:
	...
   8:	02 00                	add    al,BYTE PTR [rax]
   a:	00 00                	add    BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	02 00                	add    al,BYTE PTR [rax]
  12:	77 08                	ja     1c <.debug_loc+0x1c>
  14:	02 00                	add    al,BYTE PTR [rax]
  16:	00 00                	add    BYTE PTR [rax],al
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	00 00                	add    BYTE PTR [rax],al
  1c:	04 00                	add    al,0x0
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	02 00                	add    al,BYTE PTR [rax]
  26:	77 10                	ja     38 <.debug_loc+0x38>
  28:	04 00                	add    al,0x0
  2a:	00 00                	add    BYTE PTR [rax],al
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	06                   	(bad)  
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 00                	add    BYTE PTR [rax],al
  37:	00 02                	add    BYTE PTR [rdx],al
  39:	00 77 18             	add    BYTE PTR [rdi+0x18],dh
  3c:	06                   	(bad)  
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	00 00                	add    BYTE PTR [rax],al
  43:	00 08                	add    BYTE PTR [rax],cl
  45:	00 00                	add    BYTE PTR [rax],al
  47:	00 00                	add    BYTE PTR [rax],al
  49:	00 00                	add    BYTE PTR [rax],al
  4b:	00 02                	add    BYTE PTR [rdx],al
  4d:	00 77 20             	add    BYTE PTR [rdi+0x20],dh
  50:	08 00                	or     BYTE PTR [rax],al
  52:	00 00                	add    BYTE PTR [rax],al
  54:	00 00                	add    BYTE PTR [rax],al
  56:	00 00                	add    BYTE PTR [rax],al
  58:	09 00                	or     DWORD PTR [rax],eax
  5a:	00 00                	add    BYTE PTR [rax],al
  5c:	00 00                	add    BYTE PTR [rax],al
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	02 00                	add    al,BYTE PTR [rax]
  62:	77 28                	ja     8c <.debug_loc+0x8c>
  64:	09 00                	or     DWORD PTR [rax],eax
  66:	00 00                	add    BYTE PTR [rax],al
  68:	00 00                	add    BYTE PTR [rax],al
  6a:	00 00                	add    BYTE PTR [rax],al
  6c:	0a 00                	or     al,BYTE PTR [rax]
  6e:	00 00                	add    BYTE PTR [rax],al
  70:	00 00                	add    BYTE PTR [rax],al
  72:	00 00                	add    BYTE PTR [rax],al
  74:	02 00                	add    al,BYTE PTR [rax]
  76:	77 30                	ja     a8 <.debug_loc+0xa8>
  78:	0a 00                	or     al,BYTE PTR [rax]
  7a:	00 00                	add    BYTE PTR [rax],al
  7c:	00 00                	add    BYTE PTR [rax],al
  7e:	00 00                	add    BYTE PTR [rax],al
  80:	ee                   	out    dx,al
  81:	00 00                	add    BYTE PTR [rax],al
  83:	00 00                	add    BYTE PTR [rax],al
  85:	00 00                	add    BYTE PTR [rax],al
  87:	00 02                	add    BYTE PTR [rdx],al
  89:	00 77 38             	add    BYTE PTR [rdi+0x38],dh
  8c:	ee                   	out    dx,al
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	00 00                	add    BYTE PTR [rax],al
  93:	00 ef                	add    bh,ch
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 00                	add    BYTE PTR [rax],al
  99:	00 00                	add    BYTE PTR [rax],al
  9b:	00 02                	add    BYTE PTR [rdx],al
  9d:	00 77 30             	add    BYTE PTR [rdi+0x30],dh
  a0:	ef                   	out    dx,eax
  a1:	00 00                	add    BYTE PTR [rax],al
  a3:	00 00                	add    BYTE PTR [rax],al
  a5:	00 00                	add    BYTE PTR [rax],al
  a7:	00 f1                	add    cl,dh
  a9:	00 00                	add    BYTE PTR [rax],al
  ab:	00 00                	add    BYTE PTR [rax],al
  ad:	00 00                	add    BYTE PTR [rax],al
  af:	00 02                	add    BYTE PTR [rdx],al
  b1:	00 77 28             	add    BYTE PTR [rdi+0x28],dh
  b4:	f1                   	icebp  
  b5:	00 00                	add    BYTE PTR [rax],al
  b7:	00 00                	add    BYTE PTR [rax],al
  b9:	00 00                	add    BYTE PTR [rax],al
  bb:	00 f3                	add    bl,dh
  bd:	00 00                	add    BYTE PTR [rax],al
  bf:	00 00                	add    BYTE PTR [rax],al
  c1:	00 00                	add    BYTE PTR [rax],al
  c3:	00 02                	add    BYTE PTR [rdx],al
  c5:	00 77 20             	add    BYTE PTR [rdi+0x20],dh
  c8:	f3 00 00             	repz add BYTE PTR [rax],al
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 f5                	add    ch,dh
  d1:	00 00                	add    BYTE PTR [rax],al
  d3:	00 00                	add    BYTE PTR [rax],al
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	00 02                	add    BYTE PTR [rdx],al
  d9:	00 77 18             	add    BYTE PTR [rdi+0x18],dh
  dc:	f5                   	cmc    
  dd:	00 00                	add    BYTE PTR [rax],al
  df:	00 00                	add    BYTE PTR [rax],al
  e1:	00 00                	add    BYTE PTR [rax],al
  e3:	00 f7                	add    bh,dh
  e5:	00 00                	add    BYTE PTR [rax],al
  e7:	00 00                	add    BYTE PTR [rax],al
  e9:	00 00                	add    BYTE PTR [rax],al
  eb:	00 02                	add    BYTE PTR [rdx],al
  ed:	00 77 10             	add    BYTE PTR [rdi+0x10],dh
  f0:	f7 00 00 00 00 00    	test   DWORD PTR [rax],0x0
  f6:	00 00                	add    BYTE PTR [rax],al
  f8:	f8                   	clc    
  f9:	00 00                	add    BYTE PTR [rax],al
  fb:	00 00                	add    BYTE PTR [rax],al
  fd:	00 00                	add    BYTE PTR [rax],al
  ff:	00 02                	add    BYTE PTR [rdx],al
 101:	00 77 08             	add    BYTE PTR [rdi+0x8],dh
 104:	f8                   	clc    
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 00                	add    BYTE PTR [rax],al
 109:	00 00                	add    BYTE PTR [rax],al
 10b:	00 fc                	add    ah,bh
 10d:	00 00                	add    BYTE PTR [rax],al
 10f:	00 00                	add    BYTE PTR [rax],al
 111:	00 00                	add    BYTE PTR [rax],al
 113:	00 02                	add    BYTE PTR [rdx],al
 115:	00 77 38             	add    BYTE PTR [rdi+0x38],dh
	...
 130:	56                   	push   rsi
 131:	00 00                	add    BYTE PTR [rax],al
 133:	00 00                	add    BYTE PTR [rax],al
 135:	00 00                	add    BYTE PTR [rax],al
 137:	00 01                	add    BYTE PTR [rcx],al
 139:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
	...
 150:	00 00                	add    BYTE PTR [rax],al
 152:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
 155:	00 00                	add    BYTE PTR [rax],al
 157:	00 00                	add    BYTE PTR [rax],al
 159:	00 00                	add    BYTE PTR [rax],al
 15b:	01 00                	add    DWORD PTR [rax],eax
 15d:	54                   	push   rsp
	...
 176:	56                   	push   rsi
 177:	00 00                	add    BYTE PTR [rax],al
 179:	00 00                	add    BYTE PTR [rax],al
 17b:	00 00                	add    BYTE PTR [rax],al
 17d:	00 01                	add    BYTE PTR [rcx],al
 17f:	00 51 00             	add    BYTE PTR [rcx+0x0],dl
	...
 196:	00 00                	add    BYTE PTR [rax],al
 198:	00 1e                	add    BYTE PTR [rsi],bl
 19a:	00 00                	add    BYTE PTR [rax],al
 19c:	00 00                	add    BYTE PTR [rax],al
 19e:	00 00                	add    BYTE PTR [rax],al
 1a0:	00 01                	add    BYTE PTR [rcx],al
 1a2:	00 52 00             	add    BYTE PTR [rdx+0x0],dl
	...
 1b9:	00 00                	add    BYTE PTR [rax],al
 1bb:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 1be:	00 00                	add    BYTE PTR [rax],al
 1c0:	00 00                	add    BYTE PTR [rax],al
 1c2:	00 00                	add    BYTE PTR [rax],al
 1c4:	01 00                	add    DWORD PTR [rax],eax
 1c6:	58                   	pop    rax
 1c7:	2c 00                	sub    al,0x0
 1c9:	00 00                	add    BYTE PTR [rax],al
 1cb:	00 00                	add    BYTE PTR [rax],al
 1cd:	00 00                	add    BYTE PTR [rax],al
 1cf:	ed                   	in     eax,dx
 1d0:	00 00                	add    BYTE PTR [rax],al
 1d2:	00 00                	add    BYTE PTR [rax],al
 1d4:	00 00                	add    BYTE PTR [rax],al
 1d6:	00 01                	add    BYTE PTR [rcx],al
 1d8:	00 5c f8 00          	add    BYTE PTR [rax+rdi*8+0x0],bl
 1dc:	00 00                	add    BYTE PTR [rax],al
 1de:	00 00                	add    BYTE PTR [rax],al
 1e0:	00 00                	add    BYTE PTR [rax],al
 1e2:	fc                   	cld    
 1e3:	00 00                	add    BYTE PTR [rax],al
 1e5:	00 00                	add    BYTE PTR [rax],al
 1e7:	00 00                	add    BYTE PTR [rax],al
 1e9:	00 01                	add    BYTE PTR [rcx],al
 1eb:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
	...
 203:	00 00                	add    BYTE PTR [rax],al
 205:	56                   	push   rsi
 206:	00 00                	add    BYTE PTR [rax],al
 208:	00 00                	add    BYTE PTR [rax],al
 20a:	00 00                	add    BYTE PTR [rax],al
 20c:	00 01                	add    BYTE PTR [rcx],al
 20e:	00 59 de             	add    BYTE PTR [rcx-0x22],bl
 211:	00 00                	add    BYTE PTR [rax],al
 213:	00 00                	add    BYTE PTR [rax],al
 215:	00 00                	add    BYTE PTR [rax],al
 217:	00 ed                	add    ch,ch
 219:	00 00                	add    BYTE PTR [rax],al
 21b:	00 00                	add    BYTE PTR [rax],al
 21d:	00 00                	add    BYTE PTR [rax],al
 21f:	00 01                	add    BYTE PTR [rcx],al
 221:	00 56 f8             	add    BYTE PTR [rsi-0x8],dl
 224:	00 00                	add    BYTE PTR [rax],al
 226:	00 00                	add    BYTE PTR [rax],al
 228:	00 00                	add    BYTE PTR [rax],al
 22a:	00 fc                	add    ah,bh
 22c:	00 00                	add    BYTE PTR [rax],al
 22e:	00 00                	add    BYTE PTR [rax],al
 230:	00 00                	add    BYTE PTR [rax],al
 232:	00 01                	add    BYTE PTR [rcx],al
 234:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
	...
 24b:	00 00                	add    BYTE PTR [rax],al
 24d:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 250:	00 00                	add    BYTE PTR [rax],al
 252:	00 00                	add    BYTE PTR [rax],al
 254:	00 00                	add    BYTE PTR [rax],al
 256:	0b 00                	or     eax,DWORD PTR [rax]
 258:	78 00                	js     25a <.debug_loc+0x25a>
 25a:	08 20                	or     BYTE PTR [rax],ah
 25c:	24 08                	and    al,0x8
 25e:	20 26                	and    BYTE PTR [rsi],ah
 260:	31 1c 9f             	xor    DWORD PTR [rdi+rbx*4],ebx
 263:	2c 00                	sub    al,0x0
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 00                	add    BYTE PTR [rax],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	ed                   	in     eax,dx
 26c:	00 00                	add    BYTE PTR [rax],al
 26e:	00 00                	add    BYTE PTR [rax],al
 270:	00 00                	add    BYTE PTR [rax],al
 272:	00 03                	add    BYTE PTR [rbx],al
 274:	00 7c 7f 9f          	add    BYTE PTR [rdi+rdi*2-0x61],bh
 278:	f8                   	clc    
 279:	00 00                	add    BYTE PTR [rax],al
 27b:	00 00                	add    BYTE PTR [rax],al
 27d:	00 00                	add    BYTE PTR [rax],al
 27f:	00 fc                	add    ah,bh
 281:	00 00                	add    BYTE PTR [rax],al
 283:	00 00                	add    BYTE PTR [rax],al
 285:	00 00                	add    BYTE PTR [rax],al
 287:	00 03                	add    BYTE PTR [rbx],al
 289:	00 7c 7f 9f          	add    BYTE PTR [rdi+rdi*2-0x61],bh
	...
 2a5:	56                   	push   rsi
 2a6:	00 00                	add    BYTE PTR [rax],al
 2a8:	00 00                	add    BYTE PTR [rax],al
 2aa:	00 00                	add    BYTE PTR [rax],al
 2ac:	00 0b                	add    BYTE PTR [rbx],cl
 2ae:	00 79 00             	add    BYTE PTR [rcx+0x0],bh
 2b1:	08 20                	or     BYTE PTR [rax],ah
 2b3:	24 08                	and    al,0x8
 2b5:	20 26                	and    BYTE PTR [rsi],ah
 2b7:	31 1c 9f             	xor    DWORD PTR [rdi+rbx*4],ebx
 2ba:	56                   	push   rsi
 2bb:	00 00                	add    BYTE PTR [rax],al
 2bd:	00 00                	add    BYTE PTR [rax],al
 2bf:	00 00                	add    BYTE PTR [rax],al
 2c1:	00 ed                	add    ch,ch
 2c3:	00 00                	add    BYTE PTR [rax],al
 2c5:	00 00                	add    BYTE PTR [rax],al
 2c7:	00 00                	add    BYTE PTR [rax],al
 2c9:	00 03                	add    BYTE PTR [rbx],al
 2cb:	00 76 7f             	add    BYTE PTR [rsi+0x7f],dh
 2ce:	9f                   	lahf   
 2cf:	f8                   	clc    
 2d0:	00 00                	add    BYTE PTR [rax],al
 2d2:	00 00                	add    BYTE PTR [rax],al
 2d4:	00 00                	add    BYTE PTR [rax],al
 2d6:	00 fc                	add    ah,bh
 2d8:	00 00                	add    BYTE PTR [rax],al
 2da:	00 00                	add    BYTE PTR [rax],al
 2dc:	00 00                	add    BYTE PTR [rax],al
 2de:	00 03                	add    BYTE PTR [rbx],al
 2e0:	00 76 7f             	add    BYTE PTR [rsi+0x7f],dh
 2e3:	9f                   	lahf   
	...
 2fc:	56                   	push   rsi
 2fd:	00 00                	add    BYTE PTR [rax],al
 2ff:	00 00                	add    BYTE PTR [rax],al
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 02                	add    BYTE PTR [rdx],al
 305:	00 30                	add    BYTE PTR [rax],dh
 307:	9f                   	lahf   
 308:	de 00                	fiadd  WORD PTR [rax]
 30a:	00 00                	add    BYTE PTR [rax],al
 30c:	00 00                	add    BYTE PTR [rax],al
 30e:	00 00                	add    BYTE PTR [rax],al
 310:	ed                   	in     eax,dx
 311:	00 00                	add    BYTE PTR [rax],al
 313:	00 00                	add    BYTE PTR [rax],al
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 01                	add    BYTE PTR [rcx],al
 319:	00 58 00             	add    BYTE PTR [rax+0x0],bl
	...
 328:	00 00                	add    BYTE PTR [rax],al
 32a:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
 32d:	00 00                	add    BYTE PTR [rax],al
 32f:	00 00                	add    BYTE PTR [rax],al
 331:	00 00                	add    BYTE PTR [rax],al
 333:	99                   	cdq    
 334:	00 00                	add    BYTE PTR [rax],al
 336:	00 00                	add    BYTE PTR [rax],al
 338:	00 00                	add    BYTE PTR [rax],al
 33a:	00 02                	add    BYTE PTR [rdx],al
 33c:	00 30                	add    BYTE PTR [rax],dh
 33e:	9f                   	lahf   
 33f:	d2 00                	rol    BYTE PTR [rax],cl
 341:	00 00                	add    BYTE PTR [rax],al
 343:	00 00                	add    BYTE PTR [rax],al
 345:	00 00                	add    BYTE PTR [rax],al
 347:	da 00                	fiadd  DWORD PTR [rax]
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	00 00                	add    BYTE PTR [rax],al
 34d:	00 00                	add    BYTE PTR [rax],al
 34f:	01 00                	add    DWORD PTR [rax],eax
 351:	50                   	push   rax
 352:	f8                   	clc    
 353:	00 00                	add    BYTE PTR [rax],al
 355:	00 00                	add    BYTE PTR [rax],al
 357:	00 00                	add    BYTE PTR [rax],al
 359:	00 fc                	add    ah,bh
 35b:	00 00                	add    BYTE PTR [rax],al
 35d:	00 00                	add    BYTE PTR [rax],al
 35f:	00 00                	add    BYTE PTR [rax],al
 361:	00 02                	add    BYTE PTR [rdx],al
 363:	00 30                	add    BYTE PTR [rax],dh
 365:	9f                   	lahf   
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
  18:	fc                   	cld    
	...

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	0e                   	(bad)  
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 00                	add    BYTE PTR [rax],al
   5:	00 00                	add    BYTE PTR [rax],al
   7:	00 29                	add    BYTE PTR [rcx],ch
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 00                	add    BYTE PTR [rax],al
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	95                   	xchg   ebp,eax
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 00                	add    BYTE PTR [rax],al
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 a0 00 00 00 00    	add    BYTE PTR [rax+0x0],ah
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 ed                	add    ch,ch
	...
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 37                	add    BYTE PTR [rdi],dh
  41:	00 00                	add    BYTE PTR [rax],al
  43:	00 00                	add    BYTE PTR [rax],al
  45:	00 00                	add    BYTE PTR [rax],al
  47:	00 3a                	add    BYTE PTR [rdx],bh
  49:	00 00                	add    BYTE PTR [rax],al
  4b:	00 00                	add    BYTE PTR [rax],al
  4d:	00 00                	add    BYTE PTR [rax],al
  4f:	00 41 00             	add    BYTE PTR [rcx+0x0],al
  52:	00 00                	add    BYTE PTR [rax],al
  54:	00 00                	add    BYTE PTR [rax],al
  56:	00 00                	add    BYTE PTR [rax],al
  58:	45 00 00             	add    BYTE PTR [r8],r8b
  5b:	00 00                	add    BYTE PTR [rax],al
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
  62:	00 00                	add    BYTE PTR [rax],al
  64:	00 00                	add    BYTE PTR [rax],al
  66:	00 00                	add    BYTE PTR [rax],al
  68:	50                   	push   rax
  69:	00 00                	add    BYTE PTR [rax],al
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 60 00             	add    BYTE PTR [rax+0x0],ah
  72:	00 00                	add    BYTE PTR [rax],al
  74:	00 00                	add    BYTE PTR [rax],al
  76:	00 00                	add    BYTE PTR [rax],al
  78:	95                   	xchg   ebp,eax
  79:	00 00                	add    BYTE PTR [rax],al
  7b:	00 00                	add    BYTE PTR [rax],al
  7d:	00 00                	add    BYTE PTR [rax],al
  7f:	00 c0                	add    al,al
  81:	00 00                	add    BYTE PTR [rax],al
  83:	00 00                	add    BYTE PTR [rax],al
  85:	00 00                	add    BYTE PTR [rax],al
  87:	00 da                	add    dl,bl
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	89 00                	mov    DWORD PTR [rax],eax
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	23 00                	and    eax,DWORD PTR [rax]
   8:	00 00                	add    BYTE PTR [rax],al
   a:	01 01                	add    DWORD PTR [rcx],eax
   c:	fb                   	sti    
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	00 63 72             	add    BYTE PTR [rbx+0x72],ah
  1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  1f:	70 66                	jo     87 <.debug_line+0x87>
  21:	6c                   	ins    BYTE PTR es:[rdi],dx
  22:	69 70 5f 63 2e 63 00 	imul   esi,DWORD PTR [rax+0x5f],0x632e63
  29:	00 00                	add    BYTE PTR [rax],al
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	00 09                	add    BYTE PTR [rcx],cl
  2f:	02 00                	add    al,BYTE PTR [rax]
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 00                	add    BYTE PTR [rax],al
  37:	00 03                	add    BYTE PTR [rbx],al
  39:	0f 01 9e 50 03 6f 82 	lidt   [rsi-0x7d90fcb0]
  40:	03 11                	add    edx,DWORD PTR [rcx]
  42:	4a 03 6f 4a          	rex.WX add rbp,QWORD PTR [rdi+0x4a]
  46:	03 11                	add    edx,DWORD PTR [rcx]
  48:	3c 03                	cmp    al,0x3
  4a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4b:	58                   	pop    rax
  4c:	03 11                	add    edx,DWORD PTR [rcx]
  4e:	3c 03                	cmp    al,0x3
  50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  51:	3c 03                	cmp    al,0x3
  53:	11 2e                	adc    DWORD PTR [rsi],ebp
  55:	03 6f 3c             	add    ebp,DWORD PTR [rdi+0x3c]
  58:	03 11                	add    edx,DWORD PTR [rcx]
  5a:	2e 03 6f 4a          	add    ebp,DWORD PTR cs:[rdi+0x4a]
  5e:	00 02                	add    BYTE PTR [rdx],al
  60:	04 01                	add    al,0x1
  62:	03 13                	add    edx,DWORD PTR [rbx]
  64:	02 29                	add    ch,BYTE PTR [rcx]
  66:	01 03                	add    DWORD PTR [rbx],eax
  68:	6d                   	ins    DWORD PTR es:[rdi],dx
  69:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
  6c:	04 02                	add    al,0x2
  6e:	03 15 02 3c 01 06    	add    edx,DWORD PTR [rip+0x6013c02]        # 6013c76 <cropflip_c+0x6013c76>
  74:	08 58 06             	or     BYTE PTR [rax+0x6],bl
  77:	03 6b 9e             	add    ebp,DWORD PTR [rbx-0x62]
  7a:	03 15 4a aa 5a 48    	add    edx,DWORD PTR [rip+0x485aaa4a]        # 485aaaca <cropflip_c+0x485aaaca>
  80:	2c 03                	sub    al,0x3
  82:	0a 08                	or     cl,BYTE PTR [rax]
  84:	2e 03 65 ac          	add    esp,DWORD PTR cs:[rbp-0x54]
  88:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
  8b:	01 01                	add    DWORD PTR [rcx],eax

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	74 61                	je     63 <.debug_str+0x63>
   2:	6d                   	ins    DWORD PTR es:[rdi],dx
   3:	78 00                	js     5 <.debug_str+0x5>
   5:	74 61                	je     68 <.debug_str+0x68>
   7:	6d                   	ins    DWORD PTR es:[rdi],dx
   8:	79 00                	jns    a <.debug_str+0xa>
   a:	64                   	fs
   b:	73 74                	jae    81 <.debug_str+0x81>
   d:	5f                   	pop    rdi
   e:	6d                   	ins    DWORD PTR es:[rdi],dx
   f:	61                   	(bad)  
  10:	74 72                	je     84 <.debug_str+0x84>
  12:	69 78 00 73 72 63 5f 	imul   edi,DWORD PTR [rax+0x0],0x5f637273
  19:	72 6f                	jb     8a <.debug_str+0x8a>
  1b:	77 5f                	ja     7c <.debug_str+0x7c>
  1d:	73 69                	jae    88 <.debug_str+0x88>
  1f:	7a 65                	jp     86 <.debug_str+0x86>
  21:	00 63 72             	add    BYTE PTR [rbx+0x72],ah
  24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  25:	70 66                	jo     8d <.debug_str+0x8d>
  27:	6c                   	ins    BYTE PTR es:[rdi],dx
  28:	69 70 5f 63 2e 63 00 	imul   esi,DWORD PTR [rax+0x5f],0x632e63
  2f:	2f                   	(bad)  
  30:	68 6f 6d 65 2f       	push   0x2f656d6f
  35:	66                   	data16
  36:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  37:	65                   	gs
  38:	67 72 69             	addr32 jb a4 <.debug_str+0xa4>
  3b:	2f                   	(bad)  
  3c:	74 70                	je     ae <.debug_str+0xae>
  3e:	73 2d                	jae    6d <.debug_str+0x6d>
  40:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  41:	72 67                	jb     aa <.debug_str+0xaa>
  43:	61                   	(bad)  
  44:	32 2d 32 30 31 34    	xor    ch,BYTE PTR [rip+0x34313032]        # 3431307c <cropflip_c+0x3431307c>
  4a:	2f                   	(bad)  
  4b:	54                   	push   rsp
  4c:	50                   	push   rax
  4d:	32 2d 32 30 31 34    	xor    ch,BYTE PTR [rip+0x34313032]        # 34313085 <cropflip_c+0x34313085>
  53:	43 75 61             	rex.XB jne b7 <.debug_str+0xb7>
  56:	74 32                	je     8a <.debug_str+0x8a>
  58:	2d 6d 61 73 74       	sub    eax,0x7473616d
  5d:	65                   	gs
  5e:	72 2f                	jb     8f <.debug_str+0x8f>
  60:	74 70                	je     d2 <.debug_str+0xd2>
  62:	32 2d 62 75 6e 64    	xor    ch,BYTE PTR [rip+0x646e7562]        # 646e75ca <cropflip_c+0x646e75ca>
  68:	6c                   	ins    BYTE PTR es:[rdi],dx
  69:	65                   	gs
  6a:	2d 76 32 2f 73       	sub    eax,0x732f3276
  6f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  70:	6c                   	ins    BYTE PTR es:[rdi],dx
  71:	75 63                	jne    d6 <.debug_str+0xd6>
  73:	69 6f 6e 2f 73 72 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x6372732f
  7a:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
  7d:	73 69                	jae    e8 <.debug_str+0xe8>
  7f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  81:	65 64 20 63 68       	gs and BYTE PTR fs:gs:[rbx+0x68],ah
  86:	61                   	(bad)  
  87:	72 00                	jb     89 <.debug_str+0x89>
  89:	63 72 6f             	movsxd esi,DWORD PTR [rdx+0x6f]
  8c:	70 66                	jo     f4 <.debug_str+0xf4>
  8e:	6c                   	ins    BYTE PTR es:[rdi],dx
  8f:	69 70 5f 63 00 6c 6f 	imul   esi,DWORD PTR [rax+0x5f],0x6f6c0063
  96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  97:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  9b:	73 69                	jae    106 <.debug_str+0x106>
  9d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  9f:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[rcx+0x6e],ch
  a4:	74 00                	je     a6 <.debug_str+0xa6>
  a6:	73 68                	jae    110 <cropflip_c+0x110>
  a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  a9:	72 74                	jb     11f <cropflip_c+0x11f>
  ab:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  ae:	73 69                	jae    119 <cropflip_c+0x119>
  b0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  b2:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[rcx+0x6e],ch
  b7:	74 00                	je     b9 <.debug_str+0xb9>
  b9:	47                   	rex.RXB
  ba:	4e 55                	rex.WRX push rbp
  bc:	20 43 20             	and    BYTE PTR [rbx+0x20],al
  bf:	34 2e                	xor    al,0x2e
  c1:	36 2e 33 00          	ss xor eax,DWORD PTR cs:ss:[rax]
  c5:	75 6e                	jne    135 <cropflip_c+0x135>
  c7:	73 69                	jae    132 <cropflip_c+0x132>
  c9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  cb:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[rcx+0x6e],ch
  d0:	74 00                	je     d2 <.debug_str+0xd2>
  d2:	66 69 6c 61 73 00 63 	imul   bp,WORD PTR [rcx+riz*2+0x73],0x6300
  d9:	68 61 72 00 6f       	push   0x6f007261
  de:	66                   	data16
  df:	66                   	data16
  e0:	73 65                	jae    147 <cropflip_c+0x147>
  e2:	74 78                	je     15c <cropflip_c+0x15c>
  e4:	00 6f 66             	add    BYTE PTR [rdi+0x66],ch
  e7:	66                   	data16
  e8:	73 65                	jae    14f <cropflip_c+0x14f>
  ea:	74 79                	je     165 <cropflip_c+0x165>
  ec:	00 64 73 74          	add    BYTE PTR [rbx+rsi*2+0x74],ah
  f0:	5f                   	pop    rdi
  f1:	72 6f                	jb     162 <cropflip_c+0x162>
  f3:	77 5f                	ja     154 <cropflip_c+0x154>
  f5:	73 69                	jae    160 <cropflip_c+0x160>
  f7:	7a 65                	jp     15e <cropflip_c+0x15e>
  f9:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
  fc:	6c                   	ins    BYTE PTR es:[rdi],dx
  fd:	73 00                	jae    ff <.debug_str+0xff>
  ff:	73 72                	jae    173 <cropflip_c+0x173>
 101:	63 5f 6d             	movsxd ebx,DWORD PTR [rdi+0x6d]
 104:	61                   	(bad)  
 105:	74 72                	je     179 <cropflip_c+0x179>
 107:	69 78 00 5f 42 6f 6f 	imul   edi,DWORD PTR [rax+0x0],0x6f6f425f
 10e:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   6:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   9:	75 6e                	jne    79 <cropflip_c+0x79>
   b:	74 75                	je     82 <cropflip_c+0x82>
   d:	2f                   	(bad)  
   e:	4c 69 6e 61 72 6f 20 	imul   r13,QWORD PTR [rsi+0x61],0x34206f72
  15:	34 
  16:	2e 36 2e 33 2d 31 75 	cs ss xor ebp,DWORD PTR cs:ss:[rip+0x75627531]        # 75627550 <cropflip_c+0x75627550>
  1d:	62 75 
  1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20:	74 75                	je     97 <cropflip_c+0x97>
  22:	35 29 20 34 2e       	xor    eax,0x2e342029
  27:	36 2e 33 00          	ss xor eax,DWORD PTR cs:ss:[rax]

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 44    	or     BYTE PTR [rax+0x44000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	fc                   	cld    
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 00                	add    BYTE PTR [rax],al
  29:	42 0e                	rex.X (bad) 
  2b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  31:	8e 03                	mov    es,WORD PTR [rbx]
  33:	42 0e                	rex.X (bad) 
  35:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  3b:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86300e82 <cropflip_c+0xffffffff86300e82>
  41:	06                   	(bad)  
  42:	41 0e                	rex.B (bad) 
  44:	38 83 07 02 e4 0a    	cmp    BYTE PTR [rbx+0xae40207],al
  4a:	0e                   	(bad)  
  4b:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  4e:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  51:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  54:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  57:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  5a:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
  5d:	00 00                	add    BYTE PTR [rax],al
	...
